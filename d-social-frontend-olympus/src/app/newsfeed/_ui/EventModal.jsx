import React, { useState } from 'react';
import BackButton from '../_svg-components/BackButton';
import SearchIcon from '../_svg-components/SearchIcon';
import { host } from '@/environment';
import './EventModal.css';
import './GifUploadModal.css';
import '@/app/newsfeed/_ui/LocationModal.modules.css';
import HomeIcon from './Icons/HomeIcon';
import EducationIcon from './Icons/EducationIcon';
import RelationshipIcon from './Icons/RelationshipIcon';
import HomeLivingIcon from './Icons/HomeLivingIcon';
import FamilyIcon from './Icons/FamilyIcon';
import TravelIcon from './Icons/TravelIcon';
import InterestIcon from './Icons/InterestIcon';
import HealthIcon from './Icons/HealthIcon';
import Remembrance from './Icons/Remembrance';
import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';
import {
   Button,
   Dialog,
   DialogActions,
   DialogContent,
   DialogContentText,
   DialogTitle,
   Divider,
   Grid,
   IconButton,
   Typography,
} from '@mui/material';
import { AutoCompleteWrapper, TextFieldWrapper } from '@/component/Reuseable';
import CapitalizeFirstLetter from '@/utils/CapitalizeFirstLetter';
import { useDispatch, useSelector } from 'react-redux';
import {
   addPostData,
   addPostDataInfo,
   insertPostData,
} from '@/redux/features/NewsFeed/newsFeedSlice';
import { useSavePostMutation } from '@/redux/features/NewsFeed/newsFeedApi';
import { Formik } from 'formik';
import * as Yup from 'yup';

const containerValue = {
   work: {
      options: ['New Job', 'Left job', 'Promotion', 'Retirement'],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M56.8377 46.993H39.2412H30.7703L26.0176 35.7627H38.934H56.5974H69.5863L65.7222 46.993H56.8377Z"
               fill="#CCCCCC"
            />
            <path
               d="M70.5291 35.3169V65.9999H25V35.3169H38.9332H56.5967H70.5291Z"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M56.597 35.3171V29H38.9336V35.3171"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M25.7383 36.5293L30.3588 47.5096H39.2844H56.3109H66.1018L69.7925 36.5293"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M39.0158 45.8411L38.9336 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M56.6379 45.8411L56.5557 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M39.0158 45.8411L38.9336 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
         </svg>
      ),
   },
   education: {
      options: ['New School', 'Graduated', 'Left school'],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M22 67.9988C22 72.9627 26.0225 77 30.9663 77H67.4415C67.8891 77 68.2525 76.6352 68.2525 76.1857V73.694C68.2525 73.5246 68.1892 73.3764 68.1016 73.2477C68.0919 73.2331 68.0951 73.2135 68.0854 73.1989C66.9419 71.7006 66.3369 69.9026 66.3369 67.9988C66.3369 66.0949 66.9419 64.297 68.0854 62.797C68.0951 62.784 68.0919 62.7645 68.1016 62.7498C68.1892 62.6195 68.2525 62.4713 68.2525 62.3019V60.6245H71.8808C72.3285 60.6245 72.6918 60.2597 72.6918 59.8102V57.3184C72.6918 57.1491 72.6286 57.0009 72.541 56.8706C72.5312 56.8559 72.5361 56.8364 72.5248 56.8233C71.3813 55.3234 70.7779 53.5254 70.7779 51.6216C70.7779 49.7178 71.3829 47.9198 72.5248 46.4199C72.5345 46.4068 72.5312 46.3873 72.541 46.3726C72.6286 46.2424 72.6918 46.0942 72.6918 45.9248V43.433C72.6918 42.9835 72.3285 42.6187 71.8808 42.6187H63.4027V35.0311L69.8047 31.9987V37.5815C68.8915 37.917 68.233 38.7899 68.233 39.8224C68.233 41.1416 69.3019 42.2148 70.6157 42.2148C71.9311 42.2148 73 41.1416 73 39.8224C73 38.7899 72.3415 37.917 71.4267 37.5815V30.7153C71.4267 30.572 71.3796 30.445 71.3164 30.3277C71.3002 30.2968 71.2807 30.2724 71.2596 30.2447C71.1899 30.1486 71.1055 30.0704 71.0017 30.0134C70.9887 30.0053 70.9822 29.989 70.9677 29.9825L50.508 20.0806C50.2841 19.9731 50.0262 19.9731 49.8024 20.0806L29.3411 29.9825C29.0605 30.1176 28.8804 30.4059 28.8821 30.7186C28.8837 31.0329 29.0637 31.3179 29.3476 31.4515L36.9076 35.0311V42.6187H35.4057C33.0052 42.6187 30.7506 43.5535 29.0605 45.2505C27.3704 46.9475 26.441 49.2097 26.441 51.6216C26.441 54.7062 27.9948 57.4308 30.3581 59.0545C28.1895 59.2011 26.1653 60.0756 24.6227 61.6261C22.931 63.3231 22 65.5852 22 67.9988ZM64.7782 67.1845H29.9023C29.4546 67.1845 29.0913 67.5493 29.0913 67.9988C29.0913 68.4482 29.4546 68.8131 29.9023 68.8131H64.7782C64.8901 70.2527 65.2875 71.6289 65.9703 72.8797H31.2356C28.5544 72.8797 26.3729 70.6908 26.3729 67.9988C26.3729 66.691 26.8789 65.4647 27.7905 64.5478C28.7231 63.6244 29.9461 63.1162 31.2356 63.1162H65.9719C65.2875 64.3686 64.8917 65.7432 64.7782 67.1845ZM69.2192 50.8073H34.3417C33.894 50.8073 33.5307 51.1721 33.5307 51.6216C33.5307 52.0711 33.894 52.4359 34.3417 52.4359H69.2192C69.3311 53.8772 69.7285 55.2517 70.4113 56.5041H35.6749C32.9938 56.5041 30.8122 54.3137 30.8122 51.6216C30.8122 50.3155 31.3183 49.0875 32.2298 48.1706C33.1625 47.2472 34.3855 46.7391 35.6749 46.7391H70.4097C69.7268 47.9915 69.3311 49.3676 69.2192 50.8073ZM70.6173 40.5879C70.1972 40.5879 69.8566 40.2459 69.8566 39.8241C69.8566 39.4023 70.1972 39.0603 70.6173 39.0603C71.0374 39.0603 71.3796 39.4023 71.3796 39.8241C71.3796 40.2459 71.0374 40.5879 70.6173 40.5879ZM31.5794 30.7072L50.1576 21.7174L68.7342 30.7072L63.4044 33.2315V30.8733C63.4044 30.7675 63.3816 30.6665 63.3443 30.572C63.3314 30.5378 63.3087 30.5118 63.2908 30.4792C63.26 30.4238 63.2292 30.3684 63.1854 30.3228C63.1578 30.2935 63.1237 30.2707 63.0929 30.2447C63.0475 30.2088 63.0021 30.173 62.9486 30.147C62.9096 30.1274 62.8675 30.116 62.8253 30.103C62.7896 30.0916 62.7588 30.072 62.7215 30.0672L59.7711 29.5932C53.3919 28.564 46.9234 28.5623 40.5441 29.5932L37.5921 30.0672C37.5548 30.0737 37.524 30.0932 37.4883 30.103C37.4461 30.116 37.404 30.1274 37.365 30.147C37.3115 30.173 37.2677 30.2072 37.2207 30.2447C37.1882 30.2707 37.1558 30.2919 37.1282 30.3228C37.0844 30.3701 37.0536 30.4238 37.0228 30.4792C37.005 30.5101 36.9823 30.5378 36.9693 30.572C36.932 30.6665 36.9093 30.7658 36.9093 30.8733V33.2315L31.5794 30.7072ZM38.5296 34.5165V31.5687L40.8004 31.2039C47.0077 30.2023 53.3026 30.2023 59.5132 31.2039L61.7807 31.5671V34.5165V42.6204H38.5296V34.5165ZM28.063 51.6216C28.063 49.6445 28.8253 47.7895 30.2072 46.402C31.5924 45.0128 33.4382 44.2473 35.4057 44.2473H37.7186H62.5917H71.0698V45.1105H35.6749C33.9573 45.1105 32.3288 45.7864 31.088 47.0143C29.865 48.2439 29.1919 49.879 29.1919 51.62C29.1919 55.2094 32.1001 58.1311 35.6766 58.1311H71.0715V58.9943H67.4431H35.4057C31.3556 58.9959 28.063 55.6882 28.063 51.6216ZM30.9663 60.6245H35.4057H66.6305V61.4876H31.2356C29.5179 61.4876 27.891 62.1635 26.6486 63.3915C25.4256 64.6194 24.7525 66.2545 24.7525 67.9971C24.7525 71.5865 27.6607 74.5066 31.2372 74.5066H66.6321V75.3698H30.9663C26.9162 75.3698 23.622 72.0621 23.622 67.9971C23.622 66.02 24.3843 64.165 25.7679 62.7775C27.1514 61.3899 28.9972 60.6245 30.9663 60.6245Z"
               fill="white"
            />
         </svg>
      ),
   },
   relationship: {
      options: ['New Relationship', 'Engagement', 'Marriage', 'First Met'],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M59.8999 28.2673C64.834 33.1623 64.834 41.1033 59.8999 45.9983L45.7647 60.022C44.182 61.5928 41.6187 61.5928 40.0362 60.0222L25.9008 45.9984C20.9667 41.1034 20.9667 33.1624 25.9008 28.2674C30.5569 23.6482 37.9422 23.3926 42.9004 27.5007C47.8585 23.3926 55.2438 23.6482 59.8999 28.2673ZM42.0552 29.9711C38.062 26.0097 31.5843 26.0097 27.5911 29.9711C23.6033 33.9273 23.6033 40.3383 27.5911 44.2945L41.7267 58.3185C42.3736 58.9606 43.4271 58.9606 44.0742 58.3183L58.2096 44.2945C62.1974 40.3383 62.1974 33.9273 58.2096 29.9711C54.2164 26.0096 47.7386 26.0096 43.7455 29.9711C43.2776 30.4352 42.523 30.4352 42.0552 29.9711V29.9711ZM72.0938 56.2047C74.5294 58.6217 74.5294 62.5438 72.0937 64.9601L65.8743 71.1303C64.9156 72.082 63.365 72.082 62.4066 71.1305L56.187 64.9601C53.7512 62.5438 53.7512 58.6216 56.187 56.2045C58.3528 54.0559 61.714 53.8215 64.1403 55.5015C66.5665 53.8215 69.9278 54.0559 72.0938 56.2047H72.0938ZM63.2951 57.9082C61.8004 56.4249 59.3726 56.4249 57.8774 57.9082C56.3878 59.3864 56.3878 61.7787 57.8773 63.2564L64.0971 69.427C64.12 69.4497 64.1606 69.4497 64.1838 69.4267L70.4034 63.2564C71.8928 61.7787 71.8928 59.3865 70.4034 57.9084C68.9081 56.4249 66.4804 56.4249 64.9856 57.9083C64.5177 58.3726 63.7629 58.3726 63.295 57.9083L63.2951 57.9082Z"
               fill="white"
            />
         </svg>
      ),
   },
   homeAndLiving: {
      options: [],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M56.8377 46.993H39.2412H30.7703L26.0176 35.7627H38.934H56.5974H69.5863L65.7222 46.993H56.8377Z"
               fill="#CCCCCC"
            />
            <path
               d="M70.5291 35.3169V65.9999H25V35.3169H38.9332H56.5967H70.5291Z"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M56.597 35.3171V29H38.9336V35.3171"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M25.7383 36.5293L30.3588 47.5096H39.2844H56.3109H66.1018L69.7925 36.5293"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M39.0158 45.8411L38.9336 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M56.6379 45.8411L56.5557 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M39.0158 45.8411L38.9336 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
         </svg>
      ),
   },
   family: {
      options: [],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M22 67.9988C22 72.9627 26.0225 77 30.9663 77H67.4415C67.8891 77 68.2525 76.6352 68.2525 76.1857V73.694C68.2525 73.5246 68.1892 73.3764 68.1016 73.2477C68.0919 73.2331 68.0951 73.2135 68.0854 73.1989C66.9419 71.7006 66.3369 69.9026 66.3369 67.9988C66.3369 66.0949 66.9419 64.297 68.0854 62.797C68.0951 62.784 68.0919 62.7645 68.1016 62.7498C68.1892 62.6195 68.2525 62.4713 68.2525 62.3019V60.6245H71.8808C72.3285 60.6245 72.6918 60.2597 72.6918 59.8102V57.3184C72.6918 57.1491 72.6286 57.0009 72.541 56.8706C72.5312 56.8559 72.5361 56.8364 72.5248 56.8233C71.3813 55.3234 70.7779 53.5254 70.7779 51.6216C70.7779 49.7178 71.3829 47.9198 72.5248 46.4199C72.5345 46.4068 72.5312 46.3873 72.541 46.3726C72.6286 46.2424 72.6918 46.0942 72.6918 45.9248V43.433C72.6918 42.9835 72.3285 42.6187 71.8808 42.6187H63.4027V35.0311L69.8047 31.9987V37.5815C68.8915 37.917 68.233 38.7899 68.233 39.8224C68.233 41.1416 69.3019 42.2148 70.6157 42.2148C71.9311 42.2148 73 41.1416 73 39.8224C73 38.7899 72.3415 37.917 71.4267 37.5815V30.7153C71.4267 30.572 71.3796 30.445 71.3164 30.3277C71.3002 30.2968 71.2807 30.2724 71.2596 30.2447C71.1899 30.1486 71.1055 30.0704 71.0017 30.0134C70.9887 30.0053 70.9822 29.989 70.9677 29.9825L50.508 20.0806C50.2841 19.9731 50.0262 19.9731 49.8024 20.0806L29.3411 29.9825C29.0605 30.1176 28.8804 30.4059 28.8821 30.7186C28.8837 31.0329 29.0637 31.3179 29.3476 31.4515L36.9076 35.0311V42.6187H35.4057C33.0052 42.6187 30.7506 43.5535 29.0605 45.2505C27.3704 46.9475 26.441 49.2097 26.441 51.6216C26.441 54.7062 27.9948 57.4308 30.3581 59.0545C28.1895 59.2011 26.1653 60.0756 24.6227 61.6261C22.931 63.3231 22 65.5852 22 67.9988ZM64.7782 67.1845H29.9023C29.4546 67.1845 29.0913 67.5493 29.0913 67.9988C29.0913 68.4482 29.4546 68.8131 29.9023 68.8131H64.7782C64.8901 70.2527 65.2875 71.6289 65.9703 72.8797H31.2356C28.5544 72.8797 26.3729 70.6908 26.3729 67.9988C26.3729 66.691 26.8789 65.4647 27.7905 64.5478C28.7231 63.6244 29.9461 63.1162 31.2356 63.1162H65.9719C65.2875 64.3686 64.8917 65.7432 64.7782 67.1845ZM69.2192 50.8073H34.3417C33.894 50.8073 33.5307 51.1721 33.5307 51.6216C33.5307 52.0711 33.894 52.4359 34.3417 52.4359H69.2192C69.3311 53.8772 69.7285 55.2517 70.4113 56.5041H35.6749C32.9938 56.5041 30.8122 54.3137 30.8122 51.6216C30.8122 50.3155 31.3183 49.0875 32.2298 48.1706C33.1625 47.2472 34.3855 46.7391 35.6749 46.7391H70.4097C69.7268 47.9915 69.3311 49.3676 69.2192 50.8073ZM70.6173 40.5879C70.1972 40.5879 69.8566 40.2459 69.8566 39.8241C69.8566 39.4023 70.1972 39.0603 70.6173 39.0603C71.0374 39.0603 71.3796 39.4023 71.3796 39.8241C71.3796 40.2459 71.0374 40.5879 70.6173 40.5879ZM31.5794 30.7072L50.1576 21.7174L68.7342 30.7072L63.4044 33.2315V30.8733C63.4044 30.7675 63.3816 30.6665 63.3443 30.572C63.3314 30.5378 63.3087 30.5118 63.2908 30.4792C63.26 30.4238 63.2292 30.3684 63.1854 30.3228C63.1578 30.2935 63.1237 30.2707 63.0929 30.2447C63.0475 30.2088 63.0021 30.173 62.9486 30.147C62.9096 30.1274 62.8675 30.116 62.8253 30.103C62.7896 30.0916 62.7588 30.072 62.7215 30.0672L59.7711 29.5932C53.3919 28.564 46.9234 28.5623 40.5441 29.5932L37.5921 30.0672C37.5548 30.0737 37.524 30.0932 37.4883 30.103C37.4461 30.116 37.404 30.1274 37.365 30.147C37.3115 30.173 37.2677 30.2072 37.2207 30.2447C37.1882 30.2707 37.1558 30.2919 37.1282 30.3228C37.0844 30.3701 37.0536 30.4238 37.0228 30.4792C37.005 30.5101 36.9823 30.5378 36.9693 30.572C36.932 30.6665 36.9093 30.7658 36.9093 30.8733V33.2315L31.5794 30.7072ZM38.5296 34.5165V31.5687L40.8004 31.2039C47.0077 30.2023 53.3026 30.2023 59.5132 31.2039L61.7807 31.5671V34.5165V42.6204H38.5296V34.5165ZM28.063 51.6216C28.063 49.6445 28.8253 47.7895 30.2072 46.402C31.5924 45.0128 33.4382 44.2473 35.4057 44.2473H37.7186H62.5917H71.0698V45.1105H35.6749C33.9573 45.1105 32.3288 45.7864 31.088 47.0143C29.865 48.2439 29.1919 49.879 29.1919 51.62C29.1919 55.2094 32.1001 58.1311 35.6766 58.1311H71.0715V58.9943H67.4431H35.4057C31.3556 58.9959 28.063 55.6882 28.063 51.6216ZM30.9663 60.6245H35.4057H66.6305V61.4876H31.2356C29.5179 61.4876 27.891 62.1635 26.6486 63.3915C25.4256 64.6194 24.7525 66.2545 24.7525 67.9971C24.7525 71.5865 27.6607 74.5066 31.2372 74.5066H66.6321V75.3698H30.9663C26.9162 75.3698 23.622 72.0621 23.622 67.9971C23.622 66.02 24.3843 64.165 25.7679 62.7775C27.1514 61.3899 28.9972 60.6245 30.9663 60.6245Z"
               fill="white"
            />
         </svg>
      ),
   },
   travel: {
      options: [],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M59.8999 28.2673C64.834 33.1623 64.834 41.1033 59.8999 45.9983L45.7647 60.022C44.182 61.5928 41.6187 61.5928 40.0362 60.0222L25.9008 45.9984C20.9667 41.1034 20.9667 33.1624 25.9008 28.2674C30.5569 23.6482 37.9422 23.3926 42.9004 27.5007C47.8585 23.3926 55.2438 23.6482 59.8999 28.2673ZM42.0552 29.9711C38.062 26.0097 31.5843 26.0097 27.5911 29.9711C23.6033 33.9273 23.6033 40.3383 27.5911 44.2945L41.7267 58.3185C42.3736 58.9606 43.4271 58.9606 44.0742 58.3183L58.2096 44.2945C62.1974 40.3383 62.1974 33.9273 58.2096 29.9711C54.2164 26.0096 47.7386 26.0096 43.7455 29.9711C43.2776 30.4352 42.523 30.4352 42.0552 29.9711V29.9711ZM72.0938 56.2047C74.5294 58.6217 74.5294 62.5438 72.0937 64.9601L65.8743 71.1303C64.9156 72.082 63.365 72.082 62.4066 71.1305L56.187 64.9601C53.7512 62.5438 53.7512 58.6216 56.187 56.2045C58.3528 54.0559 61.714 53.8215 64.1403 55.5015C66.5665 53.8215 69.9278 54.0559 72.0938 56.2047H72.0938ZM63.2951 57.9082C61.8004 56.4249 59.3726 56.4249 57.8774 57.9082C56.3878 59.3864 56.3878 61.7787 57.8773 63.2564L64.0971 69.427C64.12 69.4497 64.1606 69.4497 64.1838 69.4267L70.4034 63.2564C71.8928 61.7787 71.8928 59.3865 70.4034 57.9084C68.9081 56.4249 66.4804 56.4249 64.9856 57.9083C64.5177 58.3726 63.7629 58.3726 63.295 57.9083L63.2951 57.9082Z"
               fill="white"
            />
         </svg>
      ),
   },
   interestsAndActivities: {
      options: ['New Job', 'Left job', 'Promotion', 'Retirement'],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M56.8377 46.993H39.2412H30.7703L26.0176 35.7627H38.934H56.5974H69.5863L65.7222 46.993H56.8377Z"
               fill="#CCCCCC"
            />
            <path
               d="M70.5291 35.3169V65.9999H25V35.3169H38.9332H56.5967H70.5291Z"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M56.597 35.3171V29H38.9336V35.3171"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M25.7383 36.5293L30.3588 47.5096H39.2844H56.3109H66.1018L69.7925 36.5293"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M39.0158 45.8411L38.9336 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M56.6379 45.8411L56.5557 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
            <path
               d="M39.0158 45.8411L38.9336 49.7028"
               stroke="white"
               stroke-width="2"
               stroke-miterlimit="10"
               stroke-linecap="round"
               stroke-linejoin="round"
            />
         </svg>
      ),
   },
   healthAndWellness: {
      options: [],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M22 67.9988C22 72.9627 26.0225 77 30.9663 77H67.4415C67.8891 77 68.2525 76.6352 68.2525 76.1857V73.694C68.2525 73.5246 68.1892 73.3764 68.1016 73.2477C68.0919 73.2331 68.0951 73.2135 68.0854 73.1989C66.9419 71.7006 66.3369 69.9026 66.3369 67.9988C66.3369 66.0949 66.9419 64.297 68.0854 62.797C68.0951 62.784 68.0919 62.7645 68.1016 62.7498C68.1892 62.6195 68.2525 62.4713 68.2525 62.3019V60.6245H71.8808C72.3285 60.6245 72.6918 60.2597 72.6918 59.8102V57.3184C72.6918 57.1491 72.6286 57.0009 72.541 56.8706C72.5312 56.8559 72.5361 56.8364 72.5248 56.8233C71.3813 55.3234 70.7779 53.5254 70.7779 51.6216C70.7779 49.7178 71.3829 47.9198 72.5248 46.4199C72.5345 46.4068 72.5312 46.3873 72.541 46.3726C72.6286 46.2424 72.6918 46.0942 72.6918 45.9248V43.433C72.6918 42.9835 72.3285 42.6187 71.8808 42.6187H63.4027V35.0311L69.8047 31.9987V37.5815C68.8915 37.917 68.233 38.7899 68.233 39.8224C68.233 41.1416 69.3019 42.2148 70.6157 42.2148C71.9311 42.2148 73 41.1416 73 39.8224C73 38.7899 72.3415 37.917 71.4267 37.5815V30.7153C71.4267 30.572 71.3796 30.445 71.3164 30.3277C71.3002 30.2968 71.2807 30.2724 71.2596 30.2447C71.1899 30.1486 71.1055 30.0704 71.0017 30.0134C70.9887 30.0053 70.9822 29.989 70.9677 29.9825L50.508 20.0806C50.2841 19.9731 50.0262 19.9731 49.8024 20.0806L29.3411 29.9825C29.0605 30.1176 28.8804 30.4059 28.8821 30.7186C28.8837 31.0329 29.0637 31.3179 29.3476 31.4515L36.9076 35.0311V42.6187H35.4057C33.0052 42.6187 30.7506 43.5535 29.0605 45.2505C27.3704 46.9475 26.441 49.2097 26.441 51.6216C26.441 54.7062 27.9948 57.4308 30.3581 59.0545C28.1895 59.2011 26.1653 60.0756 24.6227 61.6261C22.931 63.3231 22 65.5852 22 67.9988ZM64.7782 67.1845H29.9023C29.4546 67.1845 29.0913 67.5493 29.0913 67.9988C29.0913 68.4482 29.4546 68.8131 29.9023 68.8131H64.7782C64.8901 70.2527 65.2875 71.6289 65.9703 72.8797H31.2356C28.5544 72.8797 26.3729 70.6908 26.3729 67.9988C26.3729 66.691 26.8789 65.4647 27.7905 64.5478C28.7231 63.6244 29.9461 63.1162 31.2356 63.1162H65.9719C65.2875 64.3686 64.8917 65.7432 64.7782 67.1845ZM69.2192 50.8073H34.3417C33.894 50.8073 33.5307 51.1721 33.5307 51.6216C33.5307 52.0711 33.894 52.4359 34.3417 52.4359H69.2192C69.3311 53.8772 69.7285 55.2517 70.4113 56.5041H35.6749C32.9938 56.5041 30.8122 54.3137 30.8122 51.6216C30.8122 50.3155 31.3183 49.0875 32.2298 48.1706C33.1625 47.2472 34.3855 46.7391 35.6749 46.7391H70.4097C69.7268 47.9915 69.3311 49.3676 69.2192 50.8073ZM70.6173 40.5879C70.1972 40.5879 69.8566 40.2459 69.8566 39.8241C69.8566 39.4023 70.1972 39.0603 70.6173 39.0603C71.0374 39.0603 71.3796 39.4023 71.3796 39.8241C71.3796 40.2459 71.0374 40.5879 70.6173 40.5879ZM31.5794 30.7072L50.1576 21.7174L68.7342 30.7072L63.4044 33.2315V30.8733C63.4044 30.7675 63.3816 30.6665 63.3443 30.572C63.3314 30.5378 63.3087 30.5118 63.2908 30.4792C63.26 30.4238 63.2292 30.3684 63.1854 30.3228C63.1578 30.2935 63.1237 30.2707 63.0929 30.2447C63.0475 30.2088 63.0021 30.173 62.9486 30.147C62.9096 30.1274 62.8675 30.116 62.8253 30.103C62.7896 30.0916 62.7588 30.072 62.7215 30.0672L59.7711 29.5932C53.3919 28.564 46.9234 28.5623 40.5441 29.5932L37.5921 30.0672C37.5548 30.0737 37.524 30.0932 37.4883 30.103C37.4461 30.116 37.404 30.1274 37.365 30.147C37.3115 30.173 37.2677 30.2072 37.2207 30.2447C37.1882 30.2707 37.1558 30.2919 37.1282 30.3228C37.0844 30.3701 37.0536 30.4238 37.0228 30.4792C37.005 30.5101 36.9823 30.5378 36.9693 30.572C36.932 30.6665 36.9093 30.7658 36.9093 30.8733V33.2315L31.5794 30.7072ZM38.5296 34.5165V31.5687L40.8004 31.2039C47.0077 30.2023 53.3026 30.2023 59.5132 31.2039L61.7807 31.5671V34.5165V42.6204H38.5296V34.5165ZM28.063 51.6216C28.063 49.6445 28.8253 47.7895 30.2072 46.402C31.5924 45.0128 33.4382 44.2473 35.4057 44.2473H37.7186H62.5917H71.0698V45.1105H35.6749C33.9573 45.1105 32.3288 45.7864 31.088 47.0143C29.865 48.2439 29.1919 49.879 29.1919 51.62C29.1919 55.2094 32.1001 58.1311 35.6766 58.1311H71.0715V58.9943H67.4431H35.4057C31.3556 58.9959 28.063 55.6882 28.063 51.6216ZM30.9663 60.6245H35.4057H66.6305V61.4876H31.2356C29.5179 61.4876 27.891 62.1635 26.6486 63.3915C25.4256 64.6194 24.7525 66.2545 24.7525 67.9971C24.7525 71.5865 27.6607 74.5066 31.2372 74.5066H66.6321V75.3698H30.9663C26.9162 75.3698 23.622 72.0621 23.622 67.9971C23.622 66.02 24.3843 64.165 25.7679 62.7775C27.1514 61.3899 28.9972 60.6245 30.9663 60.6245Z"
               fill="white"
            />
         </svg>
      ),
   },
   remembrance: {
      options: [],
      logo: (
         <svg
            width="96"
            height="96"
            viewBox="0 0 96 96"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
         >
            <circle cx="48" cy="48" r="48" fill="#307777" />
            <path
               d="M59.8999 28.2673C64.834 33.1623 64.834 41.1033 59.8999 45.9983L45.7647 60.022C44.182 61.5928 41.6187 61.5928 40.0362 60.0222L25.9008 45.9984C20.9667 41.1034 20.9667 33.1624 25.9008 28.2674C30.5569 23.6482 37.9422 23.3926 42.9004 27.5007C47.8585 23.3926 55.2438 23.6482 59.8999 28.2673ZM42.0552 29.9711C38.062 26.0097 31.5843 26.0097 27.5911 29.9711C23.6033 33.9273 23.6033 40.3383 27.5911 44.2945L41.7267 58.3185C42.3736 58.9606 43.4271 58.9606 44.0742 58.3183L58.2096 44.2945C62.1974 40.3383 62.1974 33.9273 58.2096 29.9711C54.2164 26.0096 47.7386 26.0096 43.7455 29.9711C43.2776 30.4352 42.523 30.4352 42.0552 29.9711V29.9711ZM72.0938 56.2047C74.5294 58.6217 74.5294 62.5438 72.0937 64.9601L65.8743 71.1303C64.9156 72.082 63.365 72.082 62.4066 71.1305L56.187 64.9601C53.7512 62.5438 53.7512 58.6216 56.187 56.2045C58.3528 54.0559 61.714 53.8215 64.1403 55.5015C66.5665 53.8215 69.9278 54.0559 72.0938 56.2047H72.0938ZM63.2951 57.9082C61.8004 56.4249 59.3726 56.4249 57.8774 57.9082C56.3878 59.3864 56.3878 61.7787 57.8773 63.2564L64.0971 69.427C64.12 69.4497 64.1606 69.4497 64.1838 69.4267L70.4034 63.2564C71.8928 61.7787 71.8928 59.3865 70.4034 57.9084C68.9081 56.4249 66.4804 56.4249 64.9856 57.9083C64.5177 58.3726 63.7629 58.3726 63.295 57.9083L63.2951 57.9082Z"
               fill="white"
            />
         </svg>
      ),
   },
};
const categoryContainer = [
   {
      title: 'Work',
      icon: <HomeIcon />,
      value: 'work',
   },
   {
      title: 'Education',
      icon: <EducationIcon />,
      value: 'education',
   },
   {
      title: 'Relationship',
      icon: <RelationshipIcon />,
      value: 'relationship',
   },
   {
      title: 'Home & Living',
      icon: <HomeLivingIcon />,
      value: 'homeAndLiving',
   },
   {
      title: 'Family',
      icon: <FamilyIcon />,
      value: 'family',
   },
   {
      title: 'Travel',
      icon: <TravelIcon />,
      value: 'travel',
   },
   {
      title: 'Interests & Activities',
      icon: <InterestIcon />,
      value: 'interestsAndActivities',
   },
   {
      title: 'Health & Wellness',
      icon: <HealthIcon />,
      value: 'healthAndWellness',
   },
   {
      title: 'Remembrance',
      icon: <Remembrance />,
      value: 'remembrance',
   },
];
export default function EventModal({ setIsOpenModal }) {
   const [activeDiv, setActiveDiv] = useState(0);
   const addTextData = useSelector(addPostData);
   const dispatch = useDispatch();
   const [savePost, { isLoading, error, data, isSuccess }] = useSavePostMutation();

   const handleSubmit = async (e) => {
      e.preventDefault();
      dispatch(
         insertPostData({
            ['event_type']: activeDiv,
            ['post_type']: 'event',
         }),
      );
      await savePost(addTextData);
      // console.log("addTextData___", addTextData, isSuccess, error);
      dispatch(insertPostData(addPostDataInfo));
      setIsOpenModal({ event: false, post: false });
   };
   return (
      <>
         {activeDiv == 0 ? (
            <div>
               <Grid
                  sx={{
                     pt: 1,
                     pb: 1,
                     pl: 2,
                     // border:'1px solid red'
                  }}
               >
                  <BackButton setIsOpenModal={setIsOpenModal} />
               </Grid>

               <div className="tas_gif_modal_line"></div>
               <div className="search__done__wrapper tas_gif_modal_searchbar_wrapper">
                  <div className="search__wrapper">
                     <SearchIcon className={'searchIcon'} />
                     <input
                        className="location__search__input"
                        type="text"
                        placeholder="Search for events"
                     />
                  </div>
               </div>
               <img src={`/life_event.png`} className="" />
               <p className="tas_life_event_text">
                  Share and remember important moments from your life.
               </p>
               <div className="tas_event_modal_line"></div>
               <p className="tas_event_modal_title">SELECT A CATEGORY</p>

               <Grid
                  sx={{
                     display: 'grid',
                     gridTemplateColumns: '1fr 1fr 1fr',
                     backgroundColor: 'white',
                     gap: 4,
                     pb: 4,
                  }}
               >
                  {categoryContainer.map((category) => (
                     <button
                        onClick={() => {
                           setActiveDiv(category.value);
                           dispatch(
                              insertPostData({
                                 ['event_type']: category.value,
                              }),
                           );
                        }}
                        style={{ border: '0px', backgroundColor: 'white' }}
                     >
                        <span>
                           {category.icon}
                           <p>{category.title}</p>
                        </span>
                     </button>
                  ))}
               </Grid>
            </div>
         ) : (
            <>
               <DialogTitle display={'grid'} gridTemplateColumns={'6% 94%'}>
                  <div
                     onClick={() => setActiveDiv(0)}
                     style={{
                        backgroundColor: '#D9D9D9',
                        width: '30px',
                        height: '30px',
                        borderRadius: '50%',
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        cursor: 'pointer',
                     }}
                  >
                     <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                     >
                        <path
                           d="M4 12L3.29289 11.2929L2.58579 12L3.29289 12.7071L4 12ZM19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11V13ZM9.29289 5.29289L3.29289 11.2929L4.70711 12.7071L10.7071 6.70711L9.29289 5.29289ZM3.29289 12.7071L9.29289 18.7071L10.7071 17.2929L4.70711 11.2929L3.29289 12.7071ZM4 13H19V11H4V13Z"
                           fill="#33363F"
                        />
                     </svg>
                  </div>

                  <Typography
                     variant="h5"
                     sx={{
                        textAlign: 'center',
                        fontSize: '20px',
                        fontWeight: 700,
                        lineHeight: '30px',
                     }}
                  >
                     {' '}
                     Create life event
                  </Typography>
               </DialogTitle>

               <DialogContent dividers>
                  <Grid
                     sx={{
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                     }}
                  >
                     <Grid
                        display={'flex'}
                        justifyContent={'center'}
                        flexDirection={'column'}
                        alignItems={'center'}
                     >
                        <span>{containerValue[activeDiv]?.logo}</span>
                        <Typography variant="h4">
                           {CapitalizeFirstLetter(activeDiv)} Life Event
                        </Typography>
                     </Grid>
                  </Grid>
               </DialogContent>
               <form onSubmit={handleSubmit}>
                  <Grid sx={{ display: 'flex', flexDirection: 'column', py: 3, px: 3, gap: 1 }}>
                     {/* Event sub type */}
                     <Grid width={'100%'}>
                        <AutoCompleteWrapper
                           options={containerValue[activeDiv]?.options}
                           value={containerValue[activeDiv]?.options?.find(
                              (i) => i == addTextData?.event_sub_type,
                           )}
                           required={true}
                           placeholder={'Event sub type...'}
                           label={'Sub type'}
                           handleChange={(e, v) => {
                              dispatch(
                                 insertPostData({
                                    ['event_sub_type']: v,
                                 }),
                              );
                           }}
                        />
                     </Grid>
                     {/* Event caption */}
                     <Grid width={'100%'}>
                        <TextFieldWrapper
                           label={'Caption'}
                           placeholder={'Event caption...'}
                           name="description"
                           required={true}
                           value={addTextData?.description}
                           handleChange={(e) => {
                              dispatch(
                                 insertPostData({
                                    ['description']: e.target.value,
                                 }),
                              );
                           }}
                           sx={{ pb: '0px' }}
                        />
                     </Grid>
                     {/* organization */}
                     <Grid width={'100%'}>
                        <TextFieldWrapper
                           label={activeDiv == 'relationship' ? 'Partner' : 'Organization'}
                           placeholder={`${activeDiv == 'relationship' ? 'Partner' : 'Organization'}" name here..."`}
                           name="org_name"
                           value={addTextData?.org_name}
                           required={true}
                           handleChange={(e) => {
                              dispatch(
                                 insertPostData({
                                    ['org_name']: e.target.value,
                                 }),
                              );
                           }}
                           sx={{ pb: '0px' }}
                        />
                     </Grid>

                     {addTextData?.event_sub_type == 'Retirement' ||
                     addTextData?.event_sub_type == 'Left job' ? (
                        <Grid>
                           <div
                              className="datepicker-input-div"
                              style={{
                                 border: '1px solid lightGray',
                                 borderRadius: '3px',
                                 height: '40px',
                              }}
                           >
                              <svg
                                 xmlns="http://www.w3.org/2000/svg"
                                 width="16"
                                 height="16"
                                 fill="gray"
                                 class="bi bi-calendar4"
                                 viewBox="0 0 16 16"
                              >
                                 <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M2 2a1 1 0 0 0-1 1v1h14V3a1 1 0 0 0-1-1zm13 3H1v9a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1z" />
                              </svg>
                              <DatePicker
                                 placeholderText="End date"
                                 className="datepicker-input"
                                 selected={addTextData?.end_date}
                                 onChange={(date) => {
                                    // setData(p => ({ ...p, startDate: e }))
                                    dispatch(
                                       insertPostData({
                                          ['start_date']: null,
                                          ['end_date']: date,
                                       }),
                                    );
                                 }}
                                 dateFormat="MMM dd, yyyy"
                              />
                           </div>
                        </Grid>
                     ) : (
                        <Grid>
                           <div
                              className="datepicker-input-div"
                              style={{
                                 border: '1px solid lightGray',
                                 borderRadius: '3px',
                                 height: '40px',
                              }}
                           >
                              <svg
                                 xmlns="http://www.w3.org/2000/svg"
                                 width="16"
                                 height="16"
                                 fill="gray"
                                 class="bi bi-calendar4"
                                 viewBox="0 0 16 16"
                              >
                                 <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M2 2a1 1 0 0 0-1 1v1h14V3a1 1 0 0 0-1-1zm13 3H1v9a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1z" />
                              </svg>
                              <DatePicker
                                 placeholderText="Start date"
                                 className="datepicker-input"
                                 selected={addTextData?.start_date}
                                 onChange={(date) => {
                                    // setData(p => ({ ...p, startDate: e }))
                                    dispatch(
                                       insertPostData({
                                          ['start_date']: date,
                                          ['end_date']: null,
                                       }),
                                    );
                                 }}
                                 dateFormat="MMM dd, yyyy"
                              />
                           </div>
                        </Grid>
                     )}
                     <Grid>
                        <button type="submit" className="submit__button">
                           Post
                        </button>
                     </Grid>
                  </Grid>
               </form>
            </>
         )}
      </>
   );
}
